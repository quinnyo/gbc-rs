use crate::{FlagModifier, FlagState, Instruction, Register, Flag, Argument};

// Auto generated Instruction Data
pub fn instructions() -> Vec<Instruction> {
    vec![
        Instruction { code: 0, prefix: None, name: "nop", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 1, prefix: None, name: "ld", value: None, size: 3, cycles: 12, cycles_min: None, layout: [Argument::Register(Register::BC), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 2, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::BC), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 3, prefix: None, name: "inc", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::BC), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 4, prefix: None, name: "inc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 5, prefix: None, name: "dec", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 6, prefix: None, name: "ld", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::B), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 7, prefix: None, name: "rlca", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 8, prefix: None, name: "ld", value: None, size: 3, cycles: 20, cycles_min: None, layout: [Argument::MemoryLookupWordValue, Argument::Register(Register::SP)], argument: Some(Argument::MemoryLookupWordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 9, prefix: None, name: "add", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::HL), Argument::Register(Register::BC)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 10, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::BC)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 11, prefix: None, name: "dec", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::BC), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 12, prefix: None, name: "inc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 13, prefix: None, name: "dec", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 14, prefix: None, name: "ld", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::C), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 15, prefix: None, name: "rrca", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 16, prefix: None, name: "stop", value: None, size: 2, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 17, prefix: None, name: "ld", value: None, size: 3, cycles: 12, cycles_min: None, layout: [Argument::Register(Register::DE), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 18, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::DE), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 19, prefix: None, name: "inc", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::DE), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 20, prefix: None, name: "inc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 21, prefix: None, name: "dec", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 22, prefix: None, name: "ld", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::D), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 23, prefix: None, name: "rla", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 24, prefix: None, name: "jr", value: None, size: 2, cycles: 12, cycles_min: None, layout: [Argument::SignedByteValue, Argument::Unused], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 25, prefix: None, name: "add", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::HL), Argument::Register(Register::DE)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 26, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::DE)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 27, prefix: None, name: "dec", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::DE), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 28, prefix: None, name: "inc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 29, prefix: None, name: "dec", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 30, prefix: None, name: "ld", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::E), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 31, prefix: None, name: "rra", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 32, prefix: None, name: "jr", value: None, size: 2, cycles: 12, cycles_min: Some(8), layout: [Argument::Flag(Flag::NoZero), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 33, prefix: None, name: "ld", value: None, size: 3, cycles: 12, cycles_min: None, layout: [Argument::Register(Register::HL), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 34, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HLIncrement), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 35, prefix: None, name: "inc", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 36, prefix: None, name: "inc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 37, prefix: None, name: "dec", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 38, prefix: None, name: "ld", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::H), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 39, prefix: None, name: "daa", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Keep, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 40, prefix: None, name: "jr", value: None, size: 2, cycles: 12, cycles_min: Some(8), layout: [Argument::Flag(Flag::Zero), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 41, prefix: None, name: "add", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::HL), Argument::Register(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 42, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::HLIncrement)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 43, prefix: None, name: "dec", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 44, prefix: None, name: "inc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 45, prefix: None, name: "dec", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 46, prefix: None, name: "ld", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::L), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 47, prefix: None, name: "cpl", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Set, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 48, prefix: None, name: "jr", value: None, size: 2, cycles: 12, cycles_min: Some(8), layout: [Argument::Flag(Flag::NoCarry), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 49, prefix: None, name: "ld", value: None, size: 3, cycles: 12, cycles_min: None, layout: [Argument::Register(Register::SP), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 50, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HLDecrement), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 51, prefix: None, name: "inc", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::SP), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 52, prefix: None, name: "inc", value: None, size: 1, cycles: 12, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 53, prefix: None, name: "dec", value: None, size: 1, cycles: 12, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 54, prefix: None, name: "ld", value: None, size: 2, cycles: 12, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 55, prefix: None, name: "scf", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Set } },
        Instruction { code: 56, prefix: None, name: "jr", value: None, size: 2, cycles: 12, cycles_min: Some(8), layout: [Argument::Flag(Flag::Carry), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 57, prefix: None, name: "add", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::HL), Argument::Register(Register::SP)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 58, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::HLDecrement)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 59, prefix: None, name: "dec", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::SP), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 60, prefix: None, name: "inc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 61, prefix: None, name: "dec", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 62, prefix: None, name: "ld", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 63, prefix: None, name: "ccf", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 64, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 65, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 66, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 67, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 68, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 69, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 70, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::B), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 71, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 72, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 73, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 74, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 75, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 76, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 77, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 78, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::C), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 79, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 80, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 81, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 82, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 83, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 84, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 85, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 86, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::D), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 87, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 88, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 89, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 90, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 91, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 92, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 93, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 94, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::E), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 95, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 96, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 97, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 98, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 99, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 100, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 101, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 102, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::H), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 103, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 104, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 105, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 106, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 107, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 108, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 109, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 110, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::L), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 111, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 112, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 113, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 114, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 115, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 116, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 117, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 118, prefix: None, name: "halt", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 119, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 120, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 121, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 122, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 123, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 124, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 125, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 126, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 127, prefix: None, name: "ld", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 128, prefix: None, name: "add", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 129, prefix: None, name: "add", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 130, prefix: None, name: "add", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 131, prefix: None, name: "add", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 132, prefix: None, name: "add", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 133, prefix: None, name: "add", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 134, prefix: None, name: "add", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 135, prefix: None, name: "add", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 136, prefix: None, name: "adc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 137, prefix: None, name: "adc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 138, prefix: None, name: "adc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 139, prefix: None, name: "adc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 140, prefix: None, name: "adc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 141, prefix: None, name: "adc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 142, prefix: None, name: "adc", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 143, prefix: None, name: "adc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 144, prefix: None, name: "sub", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 145, prefix: None, name: "sub", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 146, prefix: None, name: "sub", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 147, prefix: None, name: "sub", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 148, prefix: None, name: "sub", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 149, prefix: None, name: "sub", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 150, prefix: None, name: "sub", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 151, prefix: None, name: "sub", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 152, prefix: None, name: "sbc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 153, prefix: None, name: "sbc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 154, prefix: None, name: "sbc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 155, prefix: None, name: "sbc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 156, prefix: None, name: "sbc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 157, prefix: None, name: "sbc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 158, prefix: None, name: "sbc", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 159, prefix: None, name: "sbc", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 160, prefix: None, name: "and", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 161, prefix: None, name: "and", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 162, prefix: None, name: "and", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 163, prefix: None, name: "and", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 164, prefix: None, name: "and", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 165, prefix: None, name: "and", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 166, prefix: None, name: "and", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 167, prefix: None, name: "and", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 168, prefix: None, name: "xor", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 169, prefix: None, name: "xor", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 170, prefix: None, name: "xor", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 171, prefix: None, name: "xor", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 172, prefix: None, name: "xor", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 173, prefix: None, name: "xor", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 174, prefix: None, name: "xor", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 175, prefix: None, name: "xor", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 176, prefix: None, name: "or", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 177, prefix: None, name: "or", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 178, prefix: None, name: "or", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 179, prefix: None, name: "or", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 180, prefix: None, name: "or", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 181, prefix: None, name: "or", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 182, prefix: None, name: "or", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 183, prefix: None, name: "or", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 184, prefix: None, name: "cp", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 185, prefix: None, name: "cp", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 186, prefix: None, name: "cp", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 187, prefix: None, name: "cp", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 188, prefix: None, name: "cp", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 189, prefix: None, name: "cp", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 190, prefix: None, name: "cp", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 191, prefix: None, name: "cp", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 192, prefix: None, name: "ret", value: None, size: 1, cycles: 20, cycles_min: Some(8), layout: [Argument::Flag(Flag::NoZero), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 193, prefix: None, name: "pop", value: None, size: 1, cycles: 12, cycles_min: None, layout: [Argument::Register(Register::BC), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 194, prefix: None, name: "jp", value: None, size: 3, cycles: 16, cycles_min: Some(12), layout: [Argument::Flag(Flag::NoZero), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 195, prefix: None, name: "jp", value: None, size: 3, cycles: 16, cycles_min: None, layout: [Argument::WordValue, Argument::Unused], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 196, prefix: None, name: "call", value: None, size: 3, cycles: 24, cycles_min: Some(12), layout: [Argument::Flag(Flag::NoZero), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 197, prefix: None, name: "push", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::Register(Register::BC), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 198, prefix: None, name: "add", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ByteValue, Argument::Unused], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 199, prefix: None, name: "rst", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Unused], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 199), (8, 207), (16, 215), (24, 223), (32, 231), (40, 239), (48, 247), (56, 255)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 200, prefix: None, name: "ret", value: None, size: 1, cycles: 20, cycles_min: Some(8), layout: [Argument::Flag(Flag::Zero), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 201, prefix: None, name: "ret", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 202, prefix: None, name: "jp", value: None, size: 3, cycles: 16, cycles_min: Some(12), layout: [Argument::Flag(Flag::Zero), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 203, prefix: None, name: "prefix", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 204, prefix: None, name: "call", value: None, size: 3, cycles: 24, cycles_min: Some(12), layout: [Argument::Flag(Flag::Zero), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 205, prefix: None, name: "call", value: None, size: 3, cycles: 24, cycles_min: None, layout: [Argument::WordValue, Argument::Unused], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 206, prefix: None, name: "adc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ByteValue, Argument::Unused], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 207, prefix: None, name: "rst", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(8), Argument::Unused], argument: Some(Argument::ConstantValue(8)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 208, prefix: None, name: "ret", value: None, size: 1, cycles: 20, cycles_min: Some(8), layout: [Argument::Flag(Flag::NoCarry), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 209, prefix: None, name: "pop", value: None, size: 1, cycles: 12, cycles_min: None, layout: [Argument::Register(Register::DE), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 210, prefix: None, name: "jp", value: None, size: 3, cycles: 16, cycles_min: Some(12), layout: [Argument::Flag(Flag::NoCarry), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 211, prefix: None, name: "invalid", value: None, size: 1, cycles: 0, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 212, prefix: None, name: "call", value: None, size: 3, cycles: 24, cycles_min: Some(12), layout: [Argument::Flag(Flag::NoCarry), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 213, prefix: None, name: "push", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::Register(Register::DE), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 214, prefix: None, name: "sub", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ByteValue, Argument::Unused], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 215, prefix: None, name: "rst", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(16), Argument::Unused], argument: Some(Argument::ConstantValue(16)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 216, prefix: None, name: "ret", value: None, size: 1, cycles: 20, cycles_min: Some(8), layout: [Argument::Flag(Flag::Carry), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 217, prefix: None, name: "reti", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 218, prefix: None, name: "jp", value: None, size: 3, cycles: 16, cycles_min: Some(12), layout: [Argument::Flag(Flag::Carry), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 219, prefix: None, name: "invalid", value: None, size: 1, cycles: 0, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 220, prefix: None, name: "call", value: None, size: 3, cycles: 24, cycles_min: Some(12), layout: [Argument::Flag(Flag::Carry), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 221, prefix: None, name: "invalid", value: None, size: 1, cycles: 0, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 222, prefix: None, name: "sbc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ByteValue, Argument::Unused], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 223, prefix: None, name: "rst", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(24), Argument::Unused], argument: Some(Argument::ConstantValue(24)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 224, prefix: None, name: "ldh", value: None, size: 2, cycles: 12, cycles_min: None, layout: [Argument::MemoryLookupByteValue, Argument::Register(Register::Accumulator)], argument: Some(Argument::MemoryLookupByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 225, prefix: None, name: "pop", value: None, size: 1, cycles: 12, cycles_min: None, layout: [Argument::Register(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 226, prefix: None, name: "ld", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::C), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 227, prefix: None, name: "invalid", value: None, size: 1, cycles: 0, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 228, prefix: None, name: "invalid", value: None, size: 1, cycles: 0, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 229, prefix: None, name: "push", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::Register(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 230, prefix: None, name: "and", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ByteValue, Argument::Unused], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 231, prefix: None, name: "rst", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(32), Argument::Unused], argument: Some(Argument::ConstantValue(32)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 232, prefix: None, name: "add", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::Register(Register::SP), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 233, prefix: None, name: "jp", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Register(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 234, prefix: None, name: "ld", value: None, size: 3, cycles: 16, cycles_min: None, layout: [Argument::MemoryLookupWordValue, Argument::Register(Register::Accumulator)], argument: Some(Argument::MemoryLookupWordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 235, prefix: None, name: "invalid", value: None, size: 1, cycles: 0, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 236, prefix: None, name: "invalid", value: None, size: 1, cycles: 0, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 237, prefix: None, name: "invalid", value: None, size: 1, cycles: 0, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 238, prefix: None, name: "xor", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ByteValue, Argument::Unused], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 239, prefix: None, name: "rst", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(40), Argument::Unused], argument: Some(Argument::ConstantValue(40)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 240, prefix: None, name: "ldh", value: None, size: 2, cycles: 12, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::MemoryLookupByteValue], argument: Some(Argument::MemoryLookupByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 241, prefix: None, name: "pop", value: None, size: 1, cycles: 12, cycles_min: None, layout: [Argument::Register(Register::AF), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Result, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 242, prefix: None, name: "ld", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 243, prefix: None, name: "di", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 244, prefix: None, name: "invalid", value: None, size: 1, cycles: 0, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 245, prefix: None, name: "push", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::Register(Register::AF), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 246, prefix: None, name: "or", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ByteValue, Argument::Unused], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 247, prefix: None, name: "rst", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(48), Argument::Unused], argument: Some(Argument::ConstantValue(48)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 248, prefix: None, name: "ldsp", value: None, size: 2, cycles: 12, cycles_min: None, layout: [Argument::Register(Register::HL), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 249, prefix: None, name: "ld", value: None, size: 1, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::SP), Argument::Register(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 250, prefix: None, name: "ld", value: None, size: 3, cycles: 16, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::MemoryLookupWordValue], argument: Some(Argument::MemoryLookupWordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 251, prefix: None, name: "ei", value: None, size: 1, cycles: 4, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 252, prefix: None, name: "invalid", value: None, size: 1, cycles: 0, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 253, prefix: None, name: "invalid", value: None, size: 1, cycles: 0, cycles_min: None, layout: [Argument::Unused, Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 254, prefix: None, name: "cp", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ByteValue, Argument::Unused], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 255, prefix: None, name: "rst", value: None, size: 1, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(56), Argument::Unused], argument: Some(Argument::ConstantValue(56)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 256, prefix: Some(203), name: "rlc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 257, prefix: Some(203), name: "rlc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 258, prefix: Some(203), name: "rlc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 259, prefix: Some(203), name: "rlc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 260, prefix: Some(203), name: "rlc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 261, prefix: Some(203), name: "rlc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 262, prefix: Some(203), name: "rlc", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 263, prefix: Some(203), name: "rlc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 264, prefix: Some(203), name: "rrc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 265, prefix: Some(203), name: "rrc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 266, prefix: Some(203), name: "rrc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 267, prefix: Some(203), name: "rrc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 268, prefix: Some(203), name: "rrc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 269, prefix: Some(203), name: "rrc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 270, prefix: Some(203), name: "rrc", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 271, prefix: Some(203), name: "rrc", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 272, prefix: Some(203), name: "rl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 273, prefix: Some(203), name: "rl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 274, prefix: Some(203), name: "rl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 275, prefix: Some(203), name: "rl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 276, prefix: Some(203), name: "rl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 277, prefix: Some(203), name: "rl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 278, prefix: Some(203), name: "rl", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 279, prefix: Some(203), name: "rl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 280, prefix: Some(203), name: "rr", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 281, prefix: Some(203), name: "rr", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 282, prefix: Some(203), name: "rr", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 283, prefix: Some(203), name: "rr", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 284, prefix: Some(203), name: "rr", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 285, prefix: Some(203), name: "rr", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 286, prefix: Some(203), name: "rr", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 287, prefix: Some(203), name: "rr", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 288, prefix: Some(203), name: "sla", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 289, prefix: Some(203), name: "sla", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 290, prefix: Some(203), name: "sla", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 291, prefix: Some(203), name: "sla", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 292, prefix: Some(203), name: "sla", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 293, prefix: Some(203), name: "sla", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 294, prefix: Some(203), name: "sla", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 295, prefix: Some(203), name: "sla", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 296, prefix: Some(203), name: "sra", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 297, prefix: Some(203), name: "sra", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 298, prefix: Some(203), name: "sra", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 299, prefix: Some(203), name: "sra", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 300, prefix: Some(203), name: "sra", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 301, prefix: Some(203), name: "sra", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 302, prefix: Some(203), name: "sra", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 303, prefix: Some(203), name: "sra", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 304, prefix: Some(203), name: "swap", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 305, prefix: Some(203), name: "swap", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 306, prefix: Some(203), name: "swap", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 307, prefix: Some(203), name: "swap", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 308, prefix: Some(203), name: "swap", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 309, prefix: Some(203), name: "swap", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 310, prefix: Some(203), name: "swap", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 311, prefix: Some(203), name: "swap", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 312, prefix: Some(203), name: "srl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::B), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 313, prefix: Some(203), name: "srl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::C), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 314, prefix: Some(203), name: "srl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::D), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 315, prefix: Some(203), name: "srl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::E), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 316, prefix: Some(203), name: "srl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::H), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 317, prefix: Some(203), name: "srl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::L), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 318, prefix: Some(203), name: "srl", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::MemoryLookupRegister(Register::HL), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 319, prefix: Some(203), name: "srl", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::Register(Register::Accumulator), Argument::Unused], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 320, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 320), (1, 328), (2, 336), (3, 344), (4, 352), (5, 360), (6, 368), (7, 376)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 321, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 321), (1, 329), (2, 337), (3, 345), (4, 353), (5, 361), (6, 369), (7, 377)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 322, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 322), (1, 330), (2, 338), (3, 346), (4, 354), (5, 362), (6, 370), (7, 378)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 323, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 323), (1, 331), (2, 339), (3, 347), (4, 355), (5, 363), (6, 371), (7, 379)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 324, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 324), (1, 332), (2, 340), (3, 348), (4, 356), (5, 364), (6, 372), (7, 380)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 325, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 325), (1, 333), (2, 341), (3, 349), (4, 357), (5, 365), (6, 373), (7, 381)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 326, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 326), (1, 334), (2, 342), (3, 350), (4, 358), (5, 366), (6, 374), (7, 382)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 327, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 327), (1, 335), (2, 343), (3, 351), (4, 359), (5, 367), (6, 375), (7, 383)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 328, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 329, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 330, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 331, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 332, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 333, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 334, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 335, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 336, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 337, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 338, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 339, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 340, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 341, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 342, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 343, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 344, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 345, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 346, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 347, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 348, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 349, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 350, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 351, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 352, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 353, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 354, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 355, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 356, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 357, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 358, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 359, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 360, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 361, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 362, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 363, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 364, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 365, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 366, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 367, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 368, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 369, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 370, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 371, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 372, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 373, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 374, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 375, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 376, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 377, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 378, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 379, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 380, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 381, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 382, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 383, prefix: Some(203), name: "bit", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 384, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 384), (1, 392), (2, 400), (3, 408), (4, 416), (5, 424), (6, 432), (7, 440)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 385, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 385), (1, 393), (2, 401), (3, 409), (4, 417), (5, 425), (6, 433), (7, 441)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 386, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 386), (1, 394), (2, 402), (3, 410), (4, 418), (5, 426), (6, 434), (7, 442)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 387, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 387), (1, 395), (2, 403), (3, 411), (4, 419), (5, 427), (6, 435), (7, 443)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 388, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 388), (1, 396), (2, 404), (3, 412), (4, 420), (5, 428), (6, 436), (7, 444)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 389, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 389), (1, 397), (2, 405), (3, 413), (4, 421), (5, 429), (6, 437), (7, 445)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 390, prefix: Some(203), name: "res", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 390), (1, 398), (2, 406), (3, 414), (4, 422), (5, 430), (6, 438), (7, 446)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 391, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 391), (1, 399), (2, 407), (3, 415), (4, 423), (5, 431), (6, 439), (7, 447)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 392, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 393, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 394, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 395, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 396, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 397, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 398, prefix: Some(203), name: "res", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 399, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 400, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 401, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 402, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 403, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 404, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 405, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 406, prefix: Some(203), name: "res", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 407, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 408, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 409, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 410, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 411, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 412, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 413, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 414, prefix: Some(203), name: "res", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 415, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 416, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 417, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 418, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 419, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 420, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 421, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 422, prefix: Some(203), name: "res", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 423, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 424, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 425, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 426, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 427, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 428, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 429, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 430, prefix: Some(203), name: "res", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 431, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 432, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 433, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 434, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 435, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 436, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 437, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 438, prefix: Some(203), name: "res", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 439, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 440, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 441, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 442, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 443, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 444, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 445, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 446, prefix: Some(203), name: "res", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 447, prefix: Some(203), name: "res", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 448, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 448), (1, 456), (2, 464), (3, 472), (4, 480), (5, 488), (6, 496), (7, 504)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 449, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 449), (1, 457), (2, 465), (3, 473), (4, 481), (5, 489), (6, 497), (7, 505)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 450, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 450), (1, 458), (2, 466), (3, 474), (4, 482), (5, 490), (6, 498), (7, 506)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 451, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 451), (1, 459), (2, 467), (3, 475), (4, 483), (5, 491), (6, 499), (7, 507)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 452, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 452), (1, 460), (2, 468), (3, 476), (4, 484), (5, 492), (6, 500), (7, 508)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 453, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 453), (1, 461), (2, 469), (3, 477), (4, 485), (5, 493), (6, 501), (7, 509)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 454, prefix: Some(203), name: "set", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 454), (1, 462), (2, 470), (3, 478), (4, 486), (5, 494), (6, 502), (7, 510)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 455, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(0), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(0)), offsets: Some([(0, 455), (1, 463), (2, 471), (3, 479), (4, 487), (5, 495), (6, 503), (7, 511)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 456, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 457, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 458, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 459, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 460, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 461, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 462, prefix: Some(203), name: "set", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 463, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(1), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 464, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 465, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 466, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 467, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 468, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 469, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 470, prefix: Some(203), name: "set", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 471, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(2), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 472, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 473, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 474, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 475, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 476, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 477, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 478, prefix: Some(203), name: "set", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 479, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(3), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 480, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 481, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 482, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 483, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 484, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 485, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 486, prefix: Some(203), name: "set", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 487, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(4), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 488, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 489, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 490, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 491, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 492, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 493, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 494, prefix: Some(203), name: "set", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 495, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(5), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 496, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 497, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 498, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 499, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 500, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 501, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 502, prefix: Some(203), name: "set", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 503, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(6), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 504, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 505, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 506, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 507, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 508, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 509, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 510, prefix: Some(203), name: "set", value: None, size: 2, cycles: 16, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 511, prefix: Some(203), name: "set", value: None, size: 2, cycles: 8, cycles_min: None, layout: [Argument::ConstantValue(7), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
    ]
}

pub fn instruction_max_arg_count(mnemonic: &str) -> usize {
    match mnemonic {
        "adc" => 1,
        "add" => 2,
        "and" => 1,
        "bit" => 2,
        "call" => 2,
        "ccf" => 0,
        "cp" => 1,
        "cpl" => 0,
        "daa" => 0,
        "dec" => 1,
        "di" => 0,
        "ei" => 0,
        "halt" => 0,
        "inc" => 1,
        "jp" => 2,
        "jr" => 2,
        "ld" => 2,
        "ldh" => 2,
        "ldsp" => 2,
        "nop" => 0,
        "or" => 1,
        "pop" => 1,
        "push" => 1,
        "res" => 2,
        "ret" => 1,
        "reti" => 0,
        "rl" => 1,
        "rla" => 0,
        "rlc" => 1,
        "rlca" => 0,
        "rr" => 1,
        "rra" => 0,
        "rrc" => 1,
        "rrca" => 0,
        "rst" => 1,
        "sbc" => 1,
        "scf" => 0,
        "set" => 2,
        "sla" => 1,
        "sra" => 1,
        "srl" => 1,
        "stop" => 0,
        "sub" => 1,
        "swap" => 1,
        "xor" => 1,
        _ => 0
    }
}
