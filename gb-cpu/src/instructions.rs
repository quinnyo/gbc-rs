use crate::{FlagModifier, FlagState, Instruction, Register, Flag, Argument};

// Auto generated Instruction Data
pub fn instructions() -> Vec<Instruction> {
    vec![
        Instruction { code: 0,   value: None, prefix: None, name: "nop", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 1,   value: None, prefix: None, name: "ld", size: 3, cycles: 12, cycles_min: None, layout: vec![Argument::Register(Register::BC), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 2,   value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::BC), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 3,   value: None, prefix: None, name: "inc", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::BC)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 4,   value: None, prefix: None, name: "inc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 5,   value: None, prefix: None, name: "dec", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 6,   value: None, prefix: None, name: "ld", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::B), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 7,   value: None, prefix: None, name: "rlca", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 8,   value: None, prefix: None, name: "ld", size: 3, cycles: 20, cycles_min: None, layout: vec![Argument::MemoryLookupWordValue, Argument::Register(Register::SP)], argument: Some(Argument::MemoryLookupWordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 9,   value: None, prefix: None, name: "add", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::HL), Argument::Register(Register::BC)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 10,  value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::BC)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 11,  value: None, prefix: None, name: "dec", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::BC)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 12,  value: None, prefix: None, name: "inc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 13,  value: None, prefix: None, name: "dec", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 14,  value: None, prefix: None, name: "ld", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::C), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 15,  value: None, prefix: None, name: "rrca", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 16,  value: None, prefix: None, name: "stop", size: 2, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 17,  value: None, prefix: None, name: "ld", size: 3, cycles: 12, cycles_min: None, layout: vec![Argument::Register(Register::DE), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 18,  value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::DE), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 19,  value: None, prefix: None, name: "inc", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::DE)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 20,  value: None, prefix: None, name: "inc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 21,  value: None, prefix: None, name: "dec", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 22,  value: None, prefix: None, name: "ld", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::D), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 23,  value: None, prefix: None, name: "rla", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 24,  value: None, prefix: None, name: "jr", size: 2, cycles: 12, cycles_min: None, layout: vec![Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 25,  value: None, prefix: None, name: "add", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::HL), Argument::Register(Register::DE)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 26,  value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::DE)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 27,  value: None, prefix: None, name: "dec", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::DE)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 28,  value: None, prefix: None, name: "inc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 29,  value: None, prefix: None, name: "dec", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 30,  value: None, prefix: None, name: "ld", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::E), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 31,  value: None, prefix: None, name: "rra", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 32,  value: None, prefix: None, name: "jr", size: 2, cycles: 12, cycles_min: Some(8), layout: vec![Argument::Flag(Flag::NoZero), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 33,  value: None, prefix: None, name: "ld", size: 3, cycles: 12, cycles_min: None, layout: vec![Argument::Register(Register::HL), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 34,  value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HLIncrement), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 35,  value: None, prefix: None, name: "inc", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 36,  value: None, prefix: None, name: "inc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 37,  value: None, prefix: None, name: "dec", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 38,  value: None, prefix: None, name: "ld", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::H), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 39,  value: None, prefix: None, name: "daa", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Keep, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 40,  value: None, prefix: None, name: "jr", size: 2, cycles: 12, cycles_min: Some(8), layout: vec![Argument::Flag(Flag::Zero), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 41,  value: None, prefix: None, name: "add", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::HL), Argument::Register(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 42,  value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::HLIncrement)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 43,  value: None, prefix: None, name: "dec", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 44,  value: None, prefix: None, name: "inc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 45,  value: None, prefix: None, name: "dec", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 46,  value: None, prefix: None, name: "ld", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::L), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 47,  value: None, prefix: None, name: "cpl", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Set, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 48,  value: None, prefix: None, name: "jr", size: 2, cycles: 12, cycles_min: Some(8), layout: vec![Argument::Flag(Flag::NoCarry), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 49,  value: None, prefix: None, name: "ld", size: 3, cycles: 12, cycles_min: None, layout: vec![Argument::Register(Register::SP), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 50,  value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HLDecrement), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 51,  value: None, prefix: None, name: "inc", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::SP)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 52,  value: None, prefix: None, name: "inc", size: 1, cycles: 12, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 53,  value: None, prefix: None, name: "dec", size: 1, cycles: 12, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 54,  value: None, prefix: None, name: "ld", size: 2, cycles: 12, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 55,  value: None, prefix: None, name: "scf", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Set } },
        Instruction { code: 56,  value: None, prefix: None, name: "jr", size: 2, cycles: 12, cycles_min: Some(8), layout: vec![Argument::Flag(Flag::Carry), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 57,  value: None, prefix: None, name: "add", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::HL), Argument::Register(Register::SP)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 58,  value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::HLDecrement)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 59,  value: None, prefix: None, name: "dec", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::SP)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 60,  value: None, prefix: None, name: "inc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 61,  value: None, prefix: None, name: "dec", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Keep } },
        Instruction { code: 62,  value: None, prefix: None, name: "ld", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 63,  value: None, prefix: None, name: "ccf", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 64,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 65,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 66,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 67,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 68,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 69,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 70,  value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::B), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 71,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 72,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 73,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 74,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 75,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 76,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 77,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 78,  value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::C), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 79,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 80,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 81,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 82,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 83,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 84,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 85,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 86,  value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::D), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 87,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 88,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 89,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 90,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 91,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 92,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 93,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 94,  value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::E), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 95,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 96,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 97,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 98,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 99,  value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 100, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 101, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 102, value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::H), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 103, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 104, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 105, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 106, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 107, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 108, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 109, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 110, value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::L), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 111, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 112, value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 113, value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 114, value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 115, value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 116, value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 117, value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 118, value: None, prefix: None, name: "halt", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 119, value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 120, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 121, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 122, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 123, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 124, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 125, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 126, value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 127, value: None, prefix: None, name: "ld", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 128, value: None, prefix: None, name: "add", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 129, value: None, prefix: None, name: "add", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 130, value: None, prefix: None, name: "add", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 131, value: None, prefix: None, name: "add", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 132, value: None, prefix: None, name: "add", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 133, value: None, prefix: None, name: "add", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 134, value: None, prefix: None, name: "add", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 135, value: None, prefix: None, name: "add", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 136, value: None, prefix: None, name: "adc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 137, value: None, prefix: None, name: "adc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 138, value: None, prefix: None, name: "adc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 139, value: None, prefix: None, name: "adc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 140, value: None, prefix: None, name: "adc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 141, value: None, prefix: None, name: "adc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 142, value: None, prefix: None, name: "adc", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 143, value: None, prefix: None, name: "adc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 144, value: None, prefix: None, name: "sub", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 145, value: None, prefix: None, name: "sub", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 146, value: None, prefix: None, name: "sub", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 147, value: None, prefix: None, name: "sub", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 148, value: None, prefix: None, name: "sub", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 149, value: None, prefix: None, name: "sub", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 150, value: None, prefix: None, name: "sub", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 151, value: None, prefix: None, name: "sub", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 152, value: None, prefix: None, name: "sbc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 153, value: None, prefix: None, name: "sbc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 154, value: None, prefix: None, name: "sbc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 155, value: None, prefix: None, name: "sbc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 156, value: None, prefix: None, name: "sbc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 157, value: None, prefix: None, name: "sbc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 158, value: None, prefix: None, name: "sbc", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 159, value: None, prefix: None, name: "sbc", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 160, value: None, prefix: None, name: "and", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 161, value: None, prefix: None, name: "and", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 162, value: None, prefix: None, name: "and", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 163, value: None, prefix: None, name: "and", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 164, value: None, prefix: None, name: "and", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 165, value: None, prefix: None, name: "and", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 166, value: None, prefix: None, name: "and", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 167, value: None, prefix: None, name: "and", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 168, value: None, prefix: None, name: "xor", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 169, value: None, prefix: None, name: "xor", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 170, value: None, prefix: None, name: "xor", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 171, value: None, prefix: None, name: "xor", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 172, value: None, prefix: None, name: "xor", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 173, value: None, prefix: None, name: "xor", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 174, value: None, prefix: None, name: "xor", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 175, value: None, prefix: None, name: "xor", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 176, value: None, prefix: None, name: "or", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 177, value: None, prefix: None, name: "or", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 178, value: None, prefix: None, name: "or", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 179, value: None, prefix: None, name: "or", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 180, value: None, prefix: None, name: "or", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 181, value: None, prefix: None, name: "or", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 182, value: None, prefix: None, name: "or", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 183, value: None, prefix: None, name: "or", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 184, value: None, prefix: None, name: "cp", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 185, value: None, prefix: None, name: "cp", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 186, value: None, prefix: None, name: "cp", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 187, value: None, prefix: None, name: "cp", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 188, value: None, prefix: None, name: "cp", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 189, value: None, prefix: None, name: "cp", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 190, value: None, prefix: None, name: "cp", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 191, value: None, prefix: None, name: "cp", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 192, value: None, prefix: None, name: "ret", size: 1, cycles: 20, cycles_min: Some(8), layout: vec![Argument::Flag(Flag::NoZero)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 193, value: None, prefix: None, name: "pop", size: 1, cycles: 12, cycles_min: None, layout: vec![Argument::Register(Register::BC)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 194, value: None, prefix: None, name: "jp", size: 3, cycles: 16, cycles_min: Some(12), layout: vec![Argument::Flag(Flag::NoZero), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 195, value: None, prefix: None, name: "jp", size: 3, cycles: 16, cycles_min: None, layout: vec![Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 196, value: None, prefix: None, name: "call", size: 3, cycles: 24, cycles_min: Some(12), layout: vec![Argument::Flag(Flag::NoZero), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 197, value: None, prefix: None, name: "push", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::Register(Register::BC)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 198, value: None, prefix: None, name: "add", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 199, value: None, prefix: None, name: "rst", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(0)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 199), (8, 207), (16, 215), (24, 223), (32, 231), (40, 239), (48, 247), (56, 255)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 200, value: None, prefix: None, name: "ret", size: 1, cycles: 20, cycles_min: Some(8), layout: vec![Argument::Flag(Flag::Zero)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 201, value: None, prefix: None, name: "ret", size: 1, cycles: 16, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 202, value: None, prefix: None, name: "jp", size: 3, cycles: 16, cycles_min: Some(12), layout: vec![Argument::Flag(Flag::Zero), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 203, value: None, prefix: None, name: "prefix", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 204, value: None, prefix: None, name: "call", size: 3, cycles: 24, cycles_min: Some(12), layout: vec![Argument::Flag(Flag::Zero), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 205, value: None, prefix: None, name: "call", size: 3, cycles: 24, cycles_min: None, layout: vec![Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 206, value: None, prefix: None, name: "adc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 207, value: None, prefix: None, name: "rst", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(8)], argument: Some(Argument::ConstantValue(8)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 208, value: None, prefix: None, name: "ret", size: 1, cycles: 20, cycles_min: Some(8), layout: vec![Argument::Flag(Flag::NoCarry)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 209, value: None, prefix: None, name: "pop", size: 1, cycles: 12, cycles_min: None, layout: vec![Argument::Register(Register::DE)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 210, value: None, prefix: None, name: "jp", size: 3, cycles: 16, cycles_min: Some(12), layout: vec![Argument::Flag(Flag::NoCarry), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 211, value: None, prefix: None, name: "invalid", size: 1, cycles: 0, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 212, value: None, prefix: None, name: "call", size: 3, cycles: 24, cycles_min: Some(12), layout: vec![Argument::Flag(Flag::NoCarry), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 213, value: None, prefix: None, name: "push", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::Register(Register::DE)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 214, value: None, prefix: None, name: "sub", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 215, value: None, prefix: None, name: "rst", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(16)], argument: Some(Argument::ConstantValue(16)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 216, value: None, prefix: None, name: "ret", size: 1, cycles: 20, cycles_min: Some(8), layout: vec![Argument::Flag(Flag::Carry)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 217, value: None, prefix: None, name: "reti", size: 1, cycles: 16, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 218, value: None, prefix: None, name: "jp", size: 3, cycles: 16, cycles_min: Some(12), layout: vec![Argument::Flag(Flag::Carry), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 219, value: None, prefix: None, name: "invalid", size: 1, cycles: 0, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 220, value: None, prefix: None, name: "call", size: 3, cycles: 24, cycles_min: Some(12), layout: vec![Argument::Flag(Flag::Carry), Argument::WordValue], argument: Some(Argument::WordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 221, value: None, prefix: None, name: "invalid", size: 1, cycles: 0, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 222, value: None, prefix: None, name: "sbc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 223, value: None, prefix: None, name: "rst", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(24)], argument: Some(Argument::ConstantValue(24)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 224, value: None, prefix: None, name: "ldh", size: 2, cycles: 12, cycles_min: None, layout: vec![Argument::MemoryLookupByteValue, Argument::Register(Register::Accumulator)], argument: Some(Argument::MemoryLookupByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 225, value: None, prefix: None, name: "pop", size: 1, cycles: 12, cycles_min: None, layout: vec![Argument::Register(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 226, value: None, prefix: None, name: "ld", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::C), Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 227, value: None, prefix: None, name: "invalid", size: 0, cycles: 0, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 228, value: None, prefix: None, name: "invalid", size: 0, cycles: 0, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 229, value: None, prefix: None, name: "push", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::Register(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 230, value: None, prefix: None, name: "and", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Clear } },
        Instruction { code: 231, value: None, prefix: None, name: "rst", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(32)], argument: Some(Argument::ConstantValue(32)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 232, value: None, prefix: None, name: "add", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::Register(Register::SP), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 233, value: None, prefix: None, name: "jp", size: 1, cycles: 4, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 234, value: None, prefix: None, name: "ld", size: 3, cycles: 16, cycles_min: None, layout: vec![Argument::MemoryLookupWordValue, Argument::Register(Register::Accumulator)], argument: Some(Argument::MemoryLookupWordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 235, value: None, prefix: None, name: "invalid", size: 1, cycles: 0, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 236, value: None, prefix: None, name: "invalid", size: 1, cycles: 0, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 237, value: None, prefix: None, name: "invalid", size: 1, cycles: 0, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 238, value: None, prefix: None, name: "xor", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 239, value: None, prefix: None, name: "rst", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(40)], argument: Some(Argument::ConstantValue(40)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 240, value: None, prefix: None, name: "ldh", size: 2, cycles: 12, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::MemoryLookupByteValue], argument: Some(Argument::MemoryLookupByteValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 241, value: None, prefix: None, name: "pop", size: 1, cycles: 12, cycles_min: None, layout: vec![Argument::Register(Register::AF)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Result, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 242, value: None, prefix: None, name: "ld", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::MemoryLookupRegister(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 243, value: None, prefix: None, name: "di", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 244, value: None, prefix: None, name: "invalid", size: 1, cycles: 0, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 245, value: None, prefix: None, name: "push", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::Register(Register::AF)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 246, value: None, prefix: None, name: "or", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 247, value: None, prefix: None, name: "rst", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(48)], argument: Some(Argument::ConstantValue(48)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 248, value: None, prefix: None, name: "ldsp", size: 2, cycles: 12, cycles_min: None, layout: vec![Argument::Register(Register::HL), Argument::SignedByteValue], argument: Some(Argument::SignedByteValue), offsets: None, flags: FlagState { z: FlagModifier::Clear, n: FlagModifier::Clear, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 249, value: None, prefix: None, name: "ld", size: 1, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::SP), Argument::Register(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 250, value: None, prefix: None, name: "ld", size: 3, cycles: 16, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator), Argument::MemoryLookupWordValue], argument: Some(Argument::MemoryLookupWordValue), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 251, value: None, prefix: None, name: "ei", size: 1, cycles: 4, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 252, value: None, prefix: None, name: "invalid", size: 1, cycles: 0, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 253, value: None, prefix: None, name: "invalid", size: 1, cycles: 0, cycles_min: None, layout: vec![], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 254, value: None, prefix: None, name: "cp", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ByteValue], argument: Some(Argument::ByteValue), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Set, c: FlagModifier::Result, h: FlagModifier::Result } },
        Instruction { code: 255, value: None, prefix: None, name: "rst", size: 1, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(56)], argument: Some(Argument::ConstantValue(56)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 256, value: None, prefix: Some(203), name: "rlc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 257, value: None, prefix: Some(203), name: "rlc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 258, value: None, prefix: Some(203), name: "rlc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 259, value: None, prefix: Some(203), name: "rlc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 260, value: None, prefix: Some(203), name: "rlc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 261, value: None, prefix: Some(203), name: "rlc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 262, value: None, prefix: Some(203), name: "rlc", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 263, value: None, prefix: Some(203), name: "rlc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 264, value: None, prefix: Some(203), name: "rrc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 265, value: None, prefix: Some(203), name: "rrc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 266, value: None, prefix: Some(203), name: "rrc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 267, value: None, prefix: Some(203), name: "rrc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 268, value: None, prefix: Some(203), name: "rrc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 269, value: None, prefix: Some(203), name: "rrc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 270, value: None, prefix: Some(203), name: "rrc", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 271, value: None, prefix: Some(203), name: "rrc", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 272, value: None, prefix: Some(203), name: "rl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 273, value: None, prefix: Some(203), name: "rl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 274, value: None, prefix: Some(203), name: "rl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 275, value: None, prefix: Some(203), name: "rl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 276, value: None, prefix: Some(203), name: "rl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 277, value: None, prefix: Some(203), name: "rl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 278, value: None, prefix: Some(203), name: "rl", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 279, value: None, prefix: Some(203), name: "rl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 280, value: None, prefix: Some(203), name: "rr", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 281, value: None, prefix: Some(203), name: "rr", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 282, value: None, prefix: Some(203), name: "rr", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 283, value: None, prefix: Some(203), name: "rr", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 284, value: None, prefix: Some(203), name: "rr", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 285, value: None, prefix: Some(203), name: "rr", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 286, value: None, prefix: Some(203), name: "rr", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 287, value: None, prefix: Some(203), name: "rr", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 288, value: None, prefix: Some(203), name: "sla", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 289, value: None, prefix: Some(203), name: "sla", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 290, value: None, prefix: Some(203), name: "sla", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 291, value: None, prefix: Some(203), name: "sla", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 292, value: None, prefix: Some(203), name: "sla", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 293, value: None, prefix: Some(203), name: "sla", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 294, value: None, prefix: Some(203), name: "sla", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 295, value: None, prefix: Some(203), name: "sla", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 296, value: None, prefix: Some(203), name: "sra", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 297, value: None, prefix: Some(203), name: "sra", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 298, value: None, prefix: Some(203), name: "sra", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 299, value: None, prefix: Some(203), name: "sra", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 300, value: None, prefix: Some(203), name: "sra", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 301, value: None, prefix: Some(203), name: "sra", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 302, value: None, prefix: Some(203), name: "sra", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 303, value: None, prefix: Some(203), name: "sra", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 304, value: None, prefix: Some(203), name: "swap", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 305, value: None, prefix: Some(203), name: "swap", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 306, value: None, prefix: Some(203), name: "swap", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 307, value: None, prefix: Some(203), name: "swap", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 308, value: None, prefix: Some(203), name: "swap", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 309, value: None, prefix: Some(203), name: "swap", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 310, value: None, prefix: Some(203), name: "swap", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 311, value: None, prefix: Some(203), name: "swap", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Clear } },
        Instruction { code: 312, value: None, prefix: Some(203), name: "srl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::B)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 313, value: None, prefix: Some(203), name: "srl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::C)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 314, value: None, prefix: Some(203), name: "srl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::D)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 315, value: None, prefix: Some(203), name: "srl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::E)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 316, value: None, prefix: Some(203), name: "srl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::H)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 317, value: None, prefix: Some(203), name: "srl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::L)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 318, value: None, prefix: Some(203), name: "srl", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::MemoryLookupRegister(Register::HL)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 319, value: None, prefix: Some(203), name: "srl", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::Register(Register::Accumulator)], argument: None, offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Clear, h: FlagModifier::Result } },
        Instruction { code: 320, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 320), (1, 328), (2, 336), (3, 344), (4, 352), (5, 360), (6, 368), (7, 376)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 321, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 321), (1, 329), (2, 337), (3, 345), (4, 353), (5, 361), (6, 369), (7, 377)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 322, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 322), (1, 330), (2, 338), (3, 346), (4, 354), (5, 362), (6, 370), (7, 378)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 323, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 323), (1, 331), (2, 339), (3, 347), (4, 355), (5, 363), (6, 371), (7, 379)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 324, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 324), (1, 332), (2, 340), (3, 348), (4, 356), (5, 364), (6, 372), (7, 380)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 325, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 325), (1, 333), (2, 341), (3, 349), (4, 357), (5, 365), (6, 373), (7, 381)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 326, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 326), (1, 334), (2, 342), (3, 350), (4, 358), (5, 366), (6, 374), (7, 382)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 327, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 327), (1, 335), (2, 343), (3, 351), (4, 359), (5, 367), (6, 375), (7, 383)]), flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 328, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 329, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 330, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 331, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 332, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 333, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 334, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 335, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 336, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 337, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 338, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 339, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 340, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 341, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 342, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 343, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 344, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 345, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 346, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 347, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 348, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 349, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 350, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 351, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 352, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 353, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 354, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 355, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 356, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 357, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 358, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 359, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 360, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 361, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 362, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 363, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 364, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 365, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 366, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 367, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 368, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 369, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 370, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 371, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 372, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 373, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 374, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 375, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 376, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 377, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 378, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 379, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 380, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 381, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 382, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 383, value: None, prefix: Some(203), name: "bit", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Result, n: FlagModifier::Clear, c: FlagModifier::Set, h: FlagModifier::Keep } },
        Instruction { code: 384, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 384), (1, 392), (2, 400), (3, 408), (4, 416), (5, 424), (6, 432), (7, 440)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 385, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 385), (1, 393), (2, 401), (3, 409), (4, 417), (5, 425), (6, 433), (7, 441)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 386, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 386), (1, 394), (2, 402), (3, 410), (4, 418), (5, 426), (6, 434), (7, 442)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 387, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 387), (1, 395), (2, 403), (3, 411), (4, 419), (5, 427), (6, 435), (7, 443)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 388, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 388), (1, 396), (2, 404), (3, 412), (4, 420), (5, 428), (6, 436), (7, 444)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 389, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 389), (1, 397), (2, 405), (3, 413), (4, 421), (5, 429), (6, 437), (7, 445)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 390, value: None, prefix: Some(203), name: "res", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 390), (1, 398), (2, 406), (3, 414), (4, 422), (5, 430), (6, 438), (7, 446)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 391, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 391), (1, 399), (2, 407), (3, 415), (4, 423), (5, 431), (6, 439), (7, 447)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 392, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 393, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 394, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 395, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 396, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 397, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 398, value: None, prefix: Some(203), name: "res", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 399, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 400, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 401, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 402, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 403, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 404, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 405, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 406, value: None, prefix: Some(203), name: "res", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 407, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 408, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 409, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 410, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 411, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 412, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 413, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 414, value: None, prefix: Some(203), name: "res", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 415, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 416, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 417, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 418, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 419, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 420, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 421, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 422, value: None, prefix: Some(203), name: "res", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 423, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 424, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 425, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 426, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 427, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 428, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 429, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 430, value: None, prefix: Some(203), name: "res", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 431, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 432, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 433, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 434, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 435, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 436, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 437, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 438, value: None, prefix: Some(203), name: "res", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 439, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 440, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 441, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 442, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 443, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 444, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 445, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 446, value: None, prefix: Some(203), name: "res", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 447, value: None, prefix: Some(203), name: "res", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 448, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 448), (1, 456), (2, 464), (3, 472), (4, 480), (5, 488), (6, 496), (7, 504)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 449, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 449), (1, 457), (2, 465), (3, 473), (4, 481), (5, 489), (6, 497), (7, 505)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 450, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 450), (1, 458), (2, 466), (3, 474), (4, 482), (5, 490), (6, 498), (7, 506)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 451, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 451), (1, 459), (2, 467), (3, 475), (4, 483), (5, 491), (6, 499), (7, 507)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 452, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 452), (1, 460), (2, 468), (3, 476), (4, 484), (5, 492), (6, 500), (7, 508)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 453, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 453), (1, 461), (2, 469), (3, 477), (4, 485), (5, 493), (6, 501), (7, 509)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 454, value: None, prefix: Some(203), name: "set", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 454), (1, 462), (2, 470), (3, 478), (4, 486), (5, 494), (6, 502), (7, 510)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 455, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(0), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(0)), offsets: Some(vec![(0, 455), (1, 463), (2, 471), (3, 479), (4, 487), (5, 495), (6, 503), (7, 511)]), flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 456, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 457, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 458, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 459, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 460, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 461, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 462, value: None, prefix: Some(203), name: "set", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 463, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(1), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(1)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 464, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 465, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 466, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 467, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 468, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 469, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 470, value: None, prefix: Some(203), name: "set", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 471, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(2), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(2)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 472, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 473, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 474, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 475, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 476, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 477, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 478, value: None, prefix: Some(203), name: "set", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 479, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(3), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(3)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 480, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 481, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 482, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 483, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 484, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 485, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 486, value: None, prefix: Some(203), name: "set", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 487, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(4), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(4)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 488, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 489, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 490, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 491, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 492, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 493, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 494, value: None, prefix: Some(203), name: "set", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 495, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(5), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(5)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 496, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 497, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 498, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 499, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 500, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 501, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 502, value: None, prefix: Some(203), name: "set", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 503, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(6), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(6)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 504, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::B)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 505, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::C)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 506, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::D)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 507, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::E)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 508, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::H)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 509, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::L)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 510, value: None, prefix: Some(203), name: "set", size: 2, cycles: 16, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::MemoryLookupRegister(Register::HL)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
        Instruction { code: 511, value: None, prefix: Some(203), name: "set", size: 2, cycles: 8, cycles_min: None, layout: vec![Argument::ConstantValue(7), Argument::Register(Register::Accumulator)], argument: Some(Argument::ConstantValue(7)), offsets: None, flags: FlagState { z: FlagModifier::Keep, n: FlagModifier::Keep, c: FlagModifier::Keep, h: FlagModifier::Keep } },
    ]
}

pub fn instruction_max_arg_count(mnemonic: &str) -> usize {
    match mnemonic {
        "adc" => 1,
        "add" => 2,
        "and" => 1,
        "bit" => 2,
        "call" => 2,
        "ccf" => 0,
        "cp" => 1,
        "cpl" => 0,
        "daa" => 0,
        "dec" => 1,
        "di" => 0,
        "ei" => 0,
        "halt" => 0,
        "inc" => 1,
        "jp" => 2,
        "jr" => 2,
        "ld" => 2,
        "ldh" => 2,
        "ldsp" => 2,
        "nop" => 0,
        "or" => 1,
        "pop" => 1,
        "push" => 1,
        "res" => 2,
        "ret" => 1,
        "reti" => 0,
        "rl" => 1,
        "rla" => 0,
        "rlc" => 1,
        "rlca" => 0,
        "rr" => 1,
        "rra" => 0,
        "rrc" => 1,
        "rrca" => 0,
        "rst" => 1,
        "sbc" => 1,
        "scf" => 0,
        "set" => 2,
        "sla" => 1,
        "sra" => 1,
        "srl" => 1,
        "stop" => 0,
        "sub" => 1,
        "swap" => 1,
        "xor" => 1,
        _ => 0
    }
}
